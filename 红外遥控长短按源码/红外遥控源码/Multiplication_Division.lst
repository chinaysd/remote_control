C51 COMPILER V9.55   MULTIPLICATION_DIVISION                                               04/17/2018 18:22:43 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MULTIPLICATION_DIVISION
OBJECT MODULE PLACED IN Multiplication_Division.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE c\Multiplication_Division.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Multiplication_Division.lst) OBJECT(Multiplication_Division.obj)

line level    source

   1          #include "H/Function_Init.H"
   2          
   3          u32 product = 0;//乘积
   4          u32 quotient = 0;//商
   5          u16 remainder = 0;//余数
   6          Result_union result;
   7          
   8          /****************************************************
   9          *函数名称：Multiplication(u16 faciend, u16 Multiplier)
  10          *函数功能：乘法运算
  11          *入口参数：faciend，Multiplier
  12          *出口参数：无
  13          ****************************************************/
  14          void Multiplication(u16 faciend, u16 Multiplier)
  15          {
  16   1              EXA0 = faciend;
  17   1              EXA1 = faciend>>8;
  18   1              EXBL = Multiplier;
  19   1              EXBH = Multiplier>>8;
  20   1      
  21   1              OPERCON |= 0x80;      //开始计算
  22   1              while(OPERCON & 0x80);
  23   1      
  24   1              result.reg.a0 = EXA0;
  25   1              result.reg.a1 = EXA1;
  26   1              result.reg.a2 = EXA2;
  27   1              result.reg.a3 = EXA3;
  28   1      
  29   1              product = result.Result;
  30   1      }       
  31          
  32          /****************************************************
  33          *函数名称：Division(u32 dividend,u16 divisor)
  34          *函数功能：除法运算
  35          *入口参数：dividend，divisor
  36          *出口参数：无
  37          ****************************************************/
  38          void Division(u32 dividend,u16 divisor)
  39          {
  40   1              Result_union temp;
  41   1              temp.Result = dividend;
  42   1      
  43   1              EXA0 = temp.reg.a0;
  44   1              EXA1 = temp.reg.a1;
  45   1              EXA2 = temp.reg.a2;
  46   1              EXA3 = temp.reg.a3;
  47   1      
  48   1              EXBL = divisor;
  49   1              EXBH = divisor>>8;
  50   1      
  51   1              OPERCON |= 0xC0;
  52   1              while(OPERCON & 0x80);
  53   1      
  54   1              result.reg.a0 = EXA0;
C51 COMPILER V9.55   MULTIPLICATION_DIVISION                                               04/17/2018 18:22:43 PAGE 2   

  55   1              result.reg.a1 = EXA1;
  56   1              result.reg.a2 = EXA2;
  57   1              result.reg.a3 = EXA3;
  58   1      
  59   1              remainder = EXBH*256+ EXBL;
  60   1              quotient  = result.Result;
  61   1      }
  62          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    125    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
